[gd_scene load_steps=1 format=2]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_principled(vec4 color, float subsurface, vec4 subsurface_color,
        float metallic, float specular, float roughness, float clearcoat,
        float clearcoat_roughness, float anisotropy, float transmission,
        float IOR, out vec3 albedo, out float sss_strength_out,
        out float metallic_out, out float specular_out,
        out float roughness_out, out float clearcoat_out,
        out float clearcoat_gloss_out, out float anisotropy_out,
        out float transmission_out, out float ior) {
    metallic = clamp(metallic, 0.0, 1.0);
    transmission = clamp(transmission, 0.0, 1.0);

    subsurface = subsurface * (1.0 - metallic);

    albedo = mix(color.rgb, subsurface_color.rgb, subsurface);
    sss_strength_out = subsurface;
    metallic_out = metallic;
    specular_out = pow((IOR - 1.0)/(IOR + 1.0), 2)/0.08;
    roughness_out = roughness;
    clearcoat_out = clearcoat * (1.0 - transmission);
    clearcoat_gloss_out = 1.0 - clearcoat_roughness;
    anisotropy_out = clamp(anisotropy, 0.0, 1.0);
    transmission_out = (1.0 - transmission) * (1.0 - metallic);
    ior = IOR;
}

void vertex () {
}

void fragment () {
	
	// node: 'Principled BSDF'
	// type: 'ShaderNodeBsdfPrincipled'
	// input sockets handling
	vec4 node0_in0_basecolor = vec4(0.8000000715255737, 0.56110018491745,
		0.14045456051826477, 1.0);
	float node0_in1_subsurface = float(0.0);
	vec3 node0_in2_subsurfaceradius = vec3(1.0, 0.20000000298023224,
		0.10000000149011612);
	vec4 node0_in3_subsurfacecolor = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in4_metallic = float(0.0);
	float node0_in5_specular = float(0.0);
	float node0_in6_speculartint = float(0.0);
	float node0_in7_roughness = float(1.0);
	float node0_in8_anisotropic = float(0.0);
	float node0_in9_anisotropicrotation = float(0.0);
	float node0_in10_sheen = float(0.836298942565918);
	float node0_in11_sheentint = float(0.5);
	float node0_in12_clearcoat = float(0.0);
	float node0_in13_clearcoatroughness = float(0.029999999329447746);
	float node0_in14_ior = float(1.4500000476837158);
	float node0_in15_transmission = float(0.0);
	float node0_in16_transmissionroughness = float(0.0);
	vec4 node0_in17_emission = vec4(0.0, 0.0, 0.0, 1.0);
	float node0_in18_alpha = float(1.0);
	vec3 node0_in19_normal = NORMAL;
	vec3 node0_in20_clearcoatnormal = vec3(0.0, 0.0, 0.0);
	vec3 node0_in21_tangent = TANGENT;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_sss_strength;
	float node0_bsdf_out3_specular;
	float node0_bsdf_out2_metallic;
	float node0_bsdf_out4_roughness;
	float node0_bsdf_out5_clearcoat;
	float node0_bsdf_out6_clearcoat_gloss;
	float node0_bsdf_out7_anisotropy;
	float node0_bsdf_out8_transmission;
	float node0_bsdf_out9_ior;
	
	node_bsdf_principled(node0_in0_basecolor, node0_in1_subsurface,
		node0_in3_subsurfacecolor, node0_in4_metallic, node0_in5_specular,
		node0_in7_roughness, node0_in12_clearcoat, node0_in13_clearcoatroughness,
		node0_in8_anisotropic, node0_in15_transmission, node0_in14_ior,
		node0_bsdf_out0_albedo, node0_bsdf_out1_sss_strength, node0_bsdf_out2_metallic,
		node0_bsdf_out3_specular, node0_bsdf_out4_roughness, node0_bsdf_out5_clearcoat,
		node0_bsdf_out6_clearcoat_gloss, node0_bsdf_out7_anisotropy,
		node0_bsdf_out8_transmission, node0_bsdf_out9_ior);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SSS_STRENGTH = node0_bsdf_out1_sss_strength;
	SPECULAR = node0_bsdf_out3_specular;
	METALLIC = node0_bsdf_out2_metallic;
	ROUGHNESS = node0_bsdf_out4_roughness;
	CLEARCOAT = node0_bsdf_out5_clearcoat;
	CLEARCOAT_GLOSS = node0_bsdf_out6_clearcoat_gloss;
	NORMAL = node0_in19_normal;
	// uncomment it when you need it
	// TRANSMISSION = vec3(1.0, 1.0, 1.0) * node0_bsdf_out8_transmission;
	// uncomment it when you are modifing TANGENT
	// TANGENT = normalize(cross(cross(node0_in21_tangent, NORMAL), NORMAL));
	// BINORMAL = cross(TANGENT, NORMAL);
	// uncomment it when you have tangent(UV) set
	// ANISOTROPY = node0_bsdf_out7_anisotropy;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Cube001"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.407729, 1.59471, -0.397306, -0.407729, 0.0965049, -0.40955, -0.407729, 0.0965049, -0.397306, 0.404374, 1.59471, -0.40955, 0.411371, 0.0965049, -0.40955, 0.404374, 0.0965049, -0.40955, 0.411371, 1.59471, 0.397306, 0.411371, 0.0965049, 0.40955, 0.411371, 0.0965049, 0.397306, 0.404374, 1.59471, -0.40955, -0.395678, 0.0965049, -0.40955, -0.395678, 1.59471, -0.40955, 0.411371, 0.0965049, 0.397306, 0.404374, 0.0965049, 0.40955, 0.404374, 0.0965049, 0.397306, -0.395678, 0.0965049, 0.40955, -0.395678, 0.0965049, 0.397306, 0.411371, 1.59471, -0.40955, 0.411371, 55.9049, -0.397306, 0.411371, 1.59471, -0.397306, -0.395678, 1.59471, 0.40955, -0.407729, 0.0965049, 0.40955, -0.395678, 0.0965049, 0.40955, 0.411371, 1.59471, 0.40955, 0.404374, 0.0965049, 0.40955, 0.411371, 0.0965049, 0.40955, 0.404374, 1.59471, -0.40955, 0.411371, 55.9049, -0.40955, 0.411371, 1.59471, -0.40955, -0.395678, 1.59471, 0.397306, 0.404374, 1.59471, 0.40955, 0.404374, 1.59471, 0.397306, 0.404374, 1.59471, 0.40955, 0.404374, 0.0965049, 0.40955, -0.407729, 0.0965049, 0.40955, -0.407729, 0.0965049, 0.397306, -0.407729, 0.0965049, -0.40955, -0.407729, 1.59471, -0.40955, -0.395678, 0.0965049, -0.40955, -0.407729, 0.0965049, -0.397306, -0.407729, 0.0965049, -0.40955, -0.395678, 0.0965049, -0.397306, -0.395678, 1.59471, -0.40955, 0.404374, 1.59471, -0.397306, 0.404374, 1.59471, -0.40955, -0.395678, 1.59471, -0.397306, -0.395678, 1.59471, -0.397306, -0.407729, 55.9049, -0.397306, -0.407729, 1.59471, -0.397306, -0.407729, 1.59471, -0.397306, -0.395678, 1.59471, -0.40955, -0.395678, 55.9049, -0.397306, -0.395678, 1.59471, -0.397306, 0.411371, 1.59471, 0.397306, 0.411371, 1.59471, -0.397306, 0.404374, 0.0965049, -0.40955, 0.404374, 0.0965049, -0.397306, 0.411371, 0.0965049, -0.40955, 0.411371, 0.0965049, -0.397306, 0.411371, 1.59471, -0.40955, 0.411371, 0.0965049, -0.397306, 0.411371, 0.0965049, -0.40955, 0.411371, 1.59471, -0.397306, -0.407729, 1.59471, 0.40955, -0.407729, 0.0965049, 0.397306, -0.407729, 0.0965049, 0.40955, -0.407729, 1.59471, 0.397306, 0.404374, 55.9049, 0.397306, 0.411371, 55.9049, 0.40955, 0.411371, 55.9049, 0.397306, -0.407729, 55.9049, 0.397306, -0.395678, 55.9049, 0.40955, -0.395678, 55.9049, 0.397306, -0.407729, 55.9049, -0.40955, -0.395678, 55.9049, -0.397306, -0.395678, 55.9049, -0.40955, 0.404374, 55.9049, -0.40955, 0.411371, 55.9049, -0.397306, 0.411371, 55.9049, -0.40955, -0.407729, 1.59471, 0.397306, -0.395678, 55.9049, 0.397306, -0.395678, 1.59471, 0.397306, 0.411371, 1.59471, -0.397306, 0.404374, 55.9049, -0.397306, 0.404374, 1.59471, -0.397306, -0.395678, 55.9049, -0.40955, 0.404374, 1.59471, -0.397306, 0.404374, 55.9049, -0.40955, 0.404374, 1.59471, -0.40955, 0.404374, 1.59471, 0.397306, 0.411371, 55.9049, 0.397306, 0.411371, 1.59471, 0.397306, 0.411371, 1.59471, 0.40955, 0.404374, 55.9049, 0.40955, 0.404374, 1.59471, 0.40955, 0.411371, 1.59471, 0.397306, 0.411371, 55.9049, 0.40955, 0.411371, 1.59471, 0.40955, -0.407729, 55.9049, 0.40955, -0.407729, 1.59471, 0.40955, -0.407729, 1.59471, 0.40955, -0.407729, 55.9049, 0.397306, -0.407729, 1.59471, 0.397306, 0.404374, 1.59471, 0.40955, 0.404374, 55.9049, 0.397306, 0.404374, 1.59471, 0.397306, -0.395678, 1.59471, 0.397306, -0.395678, 55.9049, 0.40955, -0.395678, 1.59471, 0.40955, -0.407729, 1.59471, -0.397306, -0.407729, 55.9049, -0.40955, -0.407729, 1.59471, -0.40955, -0.407729, 1.59471, -0.40955, 0.411371, 1.59471, -0.40955, 0.411371, 1.59471, 0.40955, 0.404374, 0.0965049, -0.40955, 0.411371, 0.0965049, 0.40955, 0.411371, 55.9049, -0.40955, 0.404374, 1.59471, 0.40955, 0.404374, 55.9049, -0.40955, -0.395678, 1.59471, 0.40955, -0.395678, 55.9049, -0.397306, -0.407729, 1.59471, 0.397306, -0.395678, 55.9049, -0.40955, 0.404374, 55.9049, 0.40955, -0.407729, 55.9049, 0.40955, -0.407729, 55.9049, -0.397306, 0.404374, 55.9049, -0.397306, -0.407729, 55.9049, 0.397306, 0.411371, 55.9049, -0.397306, -0.407729, 55.9049, -0.40955, 0.404374, 55.9049, -0.397306, 0.404374, 55.9049, 0.397306, 0.411371, 55.9049, 0.40955, 0.411371, 55.9049, 0.397306, -0.395678, 55.9049, 0.40955, -0.407729, 55.9049, 0.40955, 0.404374, 55.9049, 0.40955, -0.395678, 55.9049, 0.397306, -0.407729, 55.9049, -0.397306),
		Vector3Array(-1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, -1.0, 0.0, 0.0, 1.0, 0.0, 0.0, -1.0, 0.0, 0.0),
		FloatArray(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, -2.71108e-05, 1.0, 1.0, 0.0, -1.38037e-05, 1.0, 1.0, 0.0, -1.34067e-05, 1.0, 1.0, 0.0, 1.22051e-07, 1.0, 1.0, 0.0, 8.9698e-08, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 6.14308e-08, 1.0, 0.0, 1.0, 1.29679e-07, 1.0, 0.0, 1.0, 3.94274e-08, 1.0, 0.0, 1.0, -1.29797e-07, 1.0, 0.0, 1.0, -3.87095e-10, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 4.33372e-08, 1.0, 0.0, 1.0, -1.30349e-07, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 2.89239e-08, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, -7.38072e-08, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, -2.78242e-05, 1.0, 1.0, 0.0, 0.0, -1.0, -1.30184e-07, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, -1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.625, 0.753737, 0.375, 0.75, 0.375, 0.753737, 0.625, 0.502136, 0.375, 0.5, 0.375, 0.502136, 0.625, 0.253737, 0.375, 0.25, 0.375, 0.253737, 0.625, 0.502136, 0.375, 0.746322, 0.625, 0.746322, 0.375, 0.253737, 0.372864, 0.25, 0.372864, 0.253737, 0.128678, 0.25, 0.128678, 0.253737, 0.625, 0.5, 0.625, 0.496263, 0.625, 0.496263, 0.625, 0.00367796, 0.375, 0.0, 0.375, 0.00367802, 0.625, 0.25, 0.375, 0.247864, 0.375, 0.25, 0.625, 0.502136, 0.625, 0.5, 0.625, 0.5, 0.871322, 0.253737, 0.627136, 0.25, 0.627136, 0.253737, 0.625, 0.247864, 0.375, 0.247864, 0.125, 0.25, 0.125, 0.253737, 0.375, 0.75, 0.625, 0.75, 0.128678, 0.5, 0.125, 0.496263, 0.125, 0.5, 0.128678, 0.496263, 0.871322, 0.5, 0.627136, 0.496263, 0.627136, 0.5, 0.871322, 0.496263, 0.871322, 0.496263, 0.875, 0.496263, 0.875, 0.496263, 0.875, 0.496263, 0.871322, 0.5, 0.871322, 0.496263, 0.871322, 0.496263, 0.625, 0.253737, 0.625, 0.496263, 0.372864, 0.5, 0.372864, 0.496263, 0.375, 0.5, 0.375, 0.496263, 0.625, 0.5, 0.375, 0.496263, 0.375, 0.5, 0.625, 0.496263, 0.625, 1.0, 0.375, 0.996263, 0.375, 1.0, 0.625, 0.996263, 0.627136, 0.253737, 0.625, 0.25, 0.625, 0.253737, 0.875, 0.253737, 0.871322, 0.25, 0.871322, 0.253737, 0.875, 0.5, 0.871322, 0.496263, 0.871322, 0.5, 0.627136, 0.5, 0.625, 0.496263, 0.625, 0.5, 0.875, 0.253737, 0.871322, 0.253737, 0.871322, 0.253737, 0.625, 0.496263, 0.627136, 0.496263, 0.627136, 0.496263, 0.625, 0.746322, 0.627136, 0.496263, 0.627136, 0.5, 0.627136, 0.5, 0.627136, 0.253737, 0.625, 0.253737, 0.625, 0.253737, 0.625, 0.25, 0.625, 0.247864, 0.625, 0.247864, 0.625, 0.253737, 0.625, 0.25, 0.625, 0.25, 0.625, 0.0, 0.625, 0.0, 0.625, 1.0, 0.625, 0.996263, 0.625, 0.996263, 0.627136, 0.25, 0.627136, 0.253737, 0.627136, 0.253737, 0.871322, 0.253737, 0.871322, 0.25, 0.871322, 0.25, 0.625, 0.753737, 0.625, 0.75, 0.625, 0.75, 0.625, 0.75, 0.625, 0.5, 0.625, 0.25, 0.375, 0.502136, 0.375, 0.25, 0.625, 0.5, 0.625, 0.247864, 0.625, 0.502136, 0.871322, 0.25, 0.871322, 0.496263, 0.875, 0.253737, 0.871322, 0.5, 0.627136, 0.25, 0.875, 0.25, 0.875, 0.496263, 0.627136, 0.496263, 0.875, 0.253737, 0.625, 0.496263, 0.625, 0.75, 0.627136, 0.496263, 0.627136, 0.253737, 0.625, 0.25, 0.625, 0.253737, 0.625, 0.00367796, 0.625, 1.0, 0.627136, 0.25, 0.871322, 0.253737, 0.625, 0.753737),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 9, 11, 10, 12, 14, 13, 14, 16, 15, 17, 19, 18, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 33, 22, 16, 35, 34, 11, 37, 36, 38, 40, 39, 41, 39, 35, 42, 44, 43, 45, 43, 31, 46, 48, 47, 49, 45, 29, 50, 52, 51, 43, 54, 53, 55, 38, 41, 56, 41, 16, 57, 55, 56, 58, 56, 14, 59, 61, 60, 62, 60, 8, 63, 65, 64, 66, 64, 2, 67, 69, 68, 70, 72, 71, 73, 75, 74, 76, 78, 77, 79, 81, 80, 82, 84, 83, 37, 11, 85, 86, 88, 87, 89, 91, 90, 92, 94, 93, 95, 97, 96, 20, 99, 98, 100, 102, 101, 103, 105, 104, 106, 108, 107, 109, 111, 110, 0, 1, 112, 3, 4, 113, 6, 7, 114, 9, 10, 115, 12, 13, 116, 14, 15, 13, 17, 18, 117, 20, 21, 99, 23, 24, 118, 26, 27, 119, 29, 30, 120, 32, 22, 20, 16, 34, 15, 11, 36, 10, 38, 39, 41, 41, 35, 16, 42, 43, 45, 45, 31, 29, 46, 47, 121, 49, 29, 122, 50, 51, 123, 43, 53, 31, 55, 41, 56, 56, 16, 14, 57, 56, 58, 58, 14, 12, 59, 60, 62, 62, 8, 6, 63, 64, 66, 66, 2, 0, 67, 68, 124, 70, 71, 125, 73, 74, 126, 76, 77, 127, 79, 80, 128, 82, 83, 129, 37, 85, 130, 86, 87, 131, 89, 90, 132, 92, 93, 133, 95, 96, 134, 20, 98, 135, 100, 101, 136, 103, 104, 137, 106, 107, 138, 109, 110, 139)
	],
	"morph_arrays":[]
}

[node type="Spatial" name="Scene"]

[node name="Cube" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 0.0295327, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)
